{"version":3,"sources":["Components/RouteComponent/routes.js","Components/HomeComponent/index.js","vars.js","Components/LoginComponent/api.js","Components/LoginComponent/index.js","Components/AppBarComponent/index.js","Components/DashboardComponent/index.js","Components/RegisterComponent/api.js","Components/RegisterComponent/index.js","Components/ForgotPasswordComponent/api.js","Components/ForgotPasswordComponent/index.js","Components/BlogsComponent/api.js","Components/BlogsComponent/index.js","Components/NewBlogComponent/api.js","Components/NewBlogComponent/index.js","Components/RouteComponent/index.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN","REGISTER","FORGOTPASSWORD","DASHBOARD","BLOGS","NEW_BLOG","HomeComponent","isAuth","useIsAuthenticated","history","useHistory","push","Fragment","API_baseURL","API_ROUTE_NEW_BLOG","api","data","a","axios","post","res","status","success","err","message","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","subheader","marginBottom","AllLogin","signIn","useSignIn","classes","useForm","reValidateMode","mode","register","errors","handleSubmit","onSubmitEvent","console","log","response","alert","token","accessToken","expiresIn","tokenType","refreshToken","refreshTokenExpireIn","authState","user","Grid","container","component","className","item","xs","sm","md","Paper","elevation","square","Container","bar","Avatar","Typography","variant","noValidate","onSubmit","TextField","fullWidth","id","label","name","autoComplete","inputRef","required","pattern","error","email","helperText","autoFocus","minLength","password","Button","color","justify","Link","onClick","flex","flexGrow","AppBarComponent","useAuthUser","signOut","useSignOut","AppBar","position","Toolbar","noWrap","icon","marginRight","heroContent","background","padding","heroButtons","cardGrid","paddingTop","paddingBottom","card","cardMedia","cardContent","footer","DashboardComponent","React","useState","setData","open","index","openState","setOpenState","handleOpen","useEffect","get","then","articles","catch","e","maxWidth","map","cardVal","Card","CardMedia","urlToImage","CardContent","gutterBottom","moment","Date","publishedAt","format","toString","title","CardActions","size","href","url","Modal","onClose","style","content","RegisterComponent","maxLength","ForgotPasswordComponent","getapi","auth","headers","Authorization","deleteapi","delete","BlogsComponent","useAuthHeader","blogs","setBlogs","length","blog","createdAt","IconButton","aria-label","_id","body","NewBlogComponent","authUser","userEmail","multiline","rows","RouteComponent","path","exact","LoginComponent","loginPath","App","cookieDomain","window","location","hostname","cookieSecure","protocol","refreshTokenName","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94fe6f1d.chunk.js","sourcesContent":["export const HOME = \"/\"\r\nexport const LOGIN = \"/login\"\r\nexport const REGISTER = \"/register\"\r\nexport const FORGOTPASSWORD = \"/forgot\"\r\nexport const DASHBOARD = \"/dashboard\"\r\nexport const BLOGS = \"/blogs\"\r\nexport const NEW_BLOG = \"/blog/new\"","import React from 'react'\r\nimport { useIsAuthenticated } from 'react-auth-kit'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { DASHBOARD, LOGIN } from '../RouteComponent/routes'\r\n\r\n\r\nconst HomeComponent = () => {\r\n    const isAuth = useIsAuthenticated()\r\n    const history = useHistory()\r\n\r\n    if (isAuth()) {\r\n        history.push(DASHBOARD)\r\n    } else {\r\n        history.push(LOGIN)\r\n    }\r\n\r\n\r\n\r\n    return <React.Fragment />\r\n}\r\n\r\nexport default HomeComponent","export const API_baseURL = process.env.NODE_ENV === \"production\" ? \"/api\" : \"http://localhost:3000/api\"\r\nexport const API_ROUTE_LOGIN = \"/auth/login\"\r\nexport const API_ROUTE_REGISTER = \"/auth/register\"\r\nexport const API_ROUTE_FORGOT_PASSWORD = \"/auth/send-password-reset\"\r\nexport const API_ROUTE_NEW_BLOG = \"/user/blog\"","import axios from \"axios\";\r\nimport {API_ROUTE_LOGIN, API_baseURL} from \"../../vars\";\r\n\r\nconst api = async (data) => {\r\n\r\n    try {\r\n        const res = await axios.post(API_baseURL + API_ROUTE_LOGIN, data)\r\n        if(res.status === 200) {\r\n            return  {success: res.data, err: false}\r\n        } else {\r\n            return  {success: false, err: res.data.message}\r\n        }\r\n    } catch (err) {\r\n        return {success: false, err: err}\r\n    }\r\n}\r\n\r\nexport default api;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useSignIn } from \"react-auth-kit\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from '@material-ui/core';\r\nimport { DASHBOARD, FORGOTPASSWORD, REGISTER } from '../RouteComponent/routes';\r\nimport api from './api'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    subheader: {\r\n        marginBottom: theme.spacing(8)\r\n    },\r\n}));\r\n\r\nconst AllLogin = () => {\r\n    const signIn = useSignIn();\r\n    const history = useHistory()\r\n    const classes = useStyles();\r\n    const { register, errors, handleSubmit } = useForm({\r\n        reValidateMode: \"onBlur\",\r\n        mode: \"onBlur\"\r\n    })\r\n\r\n    const onSubmitEvent = async (data) => {\r\n        console.log(data);\r\n        const { success, err } = await api(data)\r\n        if (err && !success) {\r\n            if (err.response.data.message){\r\n                alert(err.response.data.message)\r\n            }  else {\r\n                alert(err);\r\n            }\r\n        } else {\r\n            signIn({\r\n                token: success.token.accessToken,\r\n                expiresIn: 15,\r\n                tokenType: success.token.tokenType,\r\n                refreshToken: success.token.refreshToken,\r\n                refreshTokenExpireIn: 60,\r\n                authState: success.user\r\n            }) ? history.push(DASHBOARD)\r\n                : alert(\"Sign In Error occurs\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <Grid item xs={false} sm={4} md={8} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\r\n                <Container>\r\n                    <div className={classes.paper}>\r\n                        <div className={classes.bar} />\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign in\r\n                        </Typography>\r\n                        <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmitEvent)}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                inputRef={\r\n                                    register({\r\n                                        required: \"Input must be an E-mail Address\",\r\n                                        pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\r\n                                    })\r\n                                }\r\n                                error={!!errors.email}\r\n                                helperText={errors.email?.message}\r\n                                autoFocus\r\n                            />\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                inputRef={register({\r\n                                    required: \"Password must have length 8\",\r\n                                    minLength: 8,\r\n                                })}\r\n                                error={!!errors.password}\r\n                                helperText={errors.password?.message}\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Sign In\r\n                            </Button>\r\n                            <Grid container spacing={4} justify=\"flex-end\">\r\n                                <Grid item>\r\n                                    <Link onClick={() => history.push(FORGOTPASSWORD)} variant=\"body2\">\r\n                                        Forgot Password\r\n                                    </Link>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Link onClick={() => history.push(REGISTER)} variant=\"body2\">\r\n                                        Have no Account? Sign Up\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default AllLogin","import { AppBar, Button, Toolbar, Typography, makeStyles } from \"@material-ui/core\"\r\nimport { useAuthUser, useSignOut } from \"react-auth-kit\"\r\nimport { useHistory } from \"react-router\"\r\nimport { BLOGS, NEW_BLOG, DASHBOARD } from \"../RouteComponent/routes\"\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    flex: {\r\n        flexGrow: 1\r\n    }\r\n}))\r\n\r\nconst AppBarComponent = () => {\r\n    const classes = useStyles()\r\n    const authState = useAuthUser()\r\n    const signOut = useSignOut()\r\n    const history = useHistory()\r\n\r\n\r\n    return (\r\n        <div className={classes.flex}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.flex}>\r\n                        Hello, {authState().name}\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={() => { history.push(DASHBOARD) }}>Dashboard</Button>\r\n                    <Button color=\"inherit\" onClick={() => { history.push(NEW_BLOG) }}>New Blog</Button>\r\n                    <Button color=\"inherit\" onClick={() => { history.push(BLOGS) }}>My Blogs</Button>\r\n                    <Button color=\"inherit\" onClick={() => { signOut() }}>Logout</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AppBarComponent","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport { Modal } from '@material-ui/core';\r\nimport AppBarComponent from '../AppBarComponent';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n}));\r\n\r\n\r\nexport default function DashboardComponent() {\r\n    const classes = useStyles();\r\n    const [data, setData] = React.useState(null);\r\n    const [openState, setOpenState] = React.useState({ open: false, index: 0 });\r\n\r\n    const handleOpen = (index) => () => {\r\n        console.log(index);\r\n        setOpenState({ open: true, index: index });\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpenState({ open: false, index: 0 });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        axios\r\n            .get('https://newsapi.org/v2/top-headlines?country=in&apiKey=67682766c67541549d16a268ad16f672')\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                setData(res.data.articles)\r\n            })\r\n            .catch((e) => {\r\n                console.log(e)\r\n                alert(e.message)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBarComponent />\r\n            <main>\r\n                <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                    {data ? (\r\n                        <React.Fragment>\r\n                            <Grid container spacing={4}>\r\n                                {data.map((cardVal, index) => (\r\n                                    <Grid item key={index} xs={12} sm={6} md={4}>\r\n                                        <Card className={classes.card}>\r\n                                            <CardMedia\r\n                                                className={classes.cardMedia}\r\n                                                image={cardVal.urlToImage}\r\n                                            />\r\n                                            <CardContent className={classes.cardContent}>\r\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                    {moment(new Date(cardVal.publishedAt)).format(\"D.MM.YYYY, h:mm a\").toString()}\r\n                                                </Typography>\r\n                                                <Typography>\r\n                                                    {cardVal.title}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                            <CardActions>\r\n                                                <Button size=\"small\" color=\"primary\" onClick={handleOpen(index)}>\r\n                                                    View\r\n                                        </Button>\r\n                                                <Button size=\"small\" color=\"primary\" href={cardVal.url}>\r\n                                                    Go to News\r\n                                        </Button>\r\n                                            </CardActions>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                            <Modal\r\n                                open={openState.open}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <Card style={{ maxWidth: 800 }}>\r\n                                    <CardMedia\r\n                                        className={classes.cardMedia}\r\n                                        image={data[openState.index].urlToImage}\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            {moment(new Date(data[openState.index].publishedAt)).format(\"D.MM.YYYY, h:mm a\").toString()}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body1\">\r\n                                            {data[openState.index].title}\r\n                                        </Typography>\r\n                                        <hr />\r\n                                        <Typography variant=\"body2\">\r\n                                            {data[openState.index].content}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Modal>\r\n                        </React.Fragment>\r\n                    ) : (\r\n                        <div>\r\n                            Loading NEWS...\r\n                        </div>\r\n                    )}\r\n                </Container>\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n}","import axios from 'axios'\r\nimport { API_baseURL, API_ROUTE_REGISTER } from '../../vars'\r\n\r\nconst api = async (data) => {\r\n\r\n    try {\r\n        const res = await axios.post(API_baseURL + API_ROUTE_REGISTER, data)\r\n        if(res.status === 201) {\r\n            return  {success: res.data, err: false}\r\n        } else {\r\n            return  {success: false, err: res.data.message}\r\n        }\r\n    } catch (err) {\r\n        return {success: false, err: err}\r\n    }\r\n}\r\n\r\nexport default api;","import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { DASHBOARD, LOGIN } from '../RouteComponent/routes';\r\nimport api from './api'\r\nimport { useSignIn } from 'react-auth-kit';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function RegisterComponent() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const signIn = useSignIn();\r\n    const { register, errors, handleSubmit } = useForm({\r\n        reValidateMode: \"onBlur\",\r\n        mode: \"onBlur\"\r\n    })\r\n\r\n    const onSubmitEvent = async (data) => {\r\n        console.log(data);\r\n        const { success, err } = await api(data)\r\n        if (err && !success) {\r\n            if (err.response.data.message){\r\n                alert(err.response.data.message)\r\n            }  else {\r\n                alert(err);\r\n            }\r\n        } else {\r\n            signIn({\r\n                token: success.token.accessToken,\r\n                expiresIn: 15,\r\n                tokenType: success.token.tokenType,\r\n                refreshToken: success.token.refreshToken,\r\n                refreshTokenExpireIn: 60,\r\n                authState: success.user\r\n            }) ? history.push(DASHBOARD)\r\n                : alert(\"Sign In Error occurs\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmitEvent)}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"name\"\r\n                                name=\"name\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label=\"Name\"\r\n                                autoFocus\r\n                                inputRef={\r\n                                    register({\r\n                                        required: \"Input must be an Name\",\r\n                                        minLength: 1\r\n                                    })\r\n                                }\r\n                                error={!!errors.name}\r\n                                helperText={errors.name?.message}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                inputRef={\r\n                                    register({\r\n                                        required: \"Input must be an E-mail Address\",\r\n                                        pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\r\n                                    })\r\n                                }\r\n                                error={!!errors.email}\r\n                                helperText={errors.email?.message}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                inputRef={\r\n                                    register({\r\n                                        required: \"Password must have length 8\",\r\n                                        minLength: 8,\r\n                                        maxLength: 128\r\n                                    })\r\n                                }\r\n                                error={!!errors.password}\r\n                                helperText={errors.password?.message}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link onClick={() => history.push(LOGIN)} variant=\"body2\">\r\n                                Already have an account? Sign in\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import axios from \"axios\";\r\nimport {API_ROUTE_FORGOT_PASSWORD, API_baseURL} from \"../../vars\";\r\n\r\nconst api = async (data) => {\r\n\r\n    try {\r\n        const res = await axios.post(API_baseURL + API_ROUTE_FORGOT_PASSWORD, data)\r\n        if(res.status === 200) {\r\n            return  {success: res.data, err: false}\r\n        } else {\r\n            return  {success: false, err: res.data.message}\r\n        }\r\n    } catch (err) {\r\n        return {success: false, err: err}\r\n    }\r\n}\r\n\r\nexport default api;","import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { DASHBOARD } from '../RouteComponent/routes';\r\nimport api from './api'\r\nimport { useSignIn } from 'react-auth-kit';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function ForgotPasswordComponent() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const signIn = useSignIn();\r\n    const { register, errors, handleSubmit } = useForm({\r\n        reValidateMode: \"onBlur\",\r\n        mode: \"onBlur\"\r\n    })\r\n\r\n    const onSubmitEvent = async (data) => {\r\n        console.log(data);\r\n        const { success, err } = await api(data)\r\n        if (err && !success) {\r\n            if (err.response.data.message){\r\n                alert(err.response.data.message)\r\n            }  else {\r\n                alert(err);\r\n            }\r\n        } else {\r\n            console.log(success)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Forgot Password\r\n                </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmitEvent)}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                inputRef={\r\n                                    register({\r\n                                        required: \"Input must be an E-mail Address\",\r\n                                        pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\r\n                                    })\r\n                                }\r\n                                error={!!errors.email}\r\n                                helperText={errors.email?.message}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Send Forgot Password Request\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import axios from \"axios\";\r\nimport { API_ROUTE_NEW_BLOG, API_baseURL } from \"../../vars\";\r\n\r\nexport const getapi = async (auth) => {\r\n\r\n    try {\r\n        const res = await axios.get(API_baseURL + API_ROUTE_NEW_BLOG, {\r\n            headers: {\r\n                Authorization: auth\r\n            }\r\n        })\r\n        if (res.status === 200) {\r\n            return { success: res.data, err: false }\r\n        } else {\r\n            return { success: false, err: res.data.message }\r\n        }\r\n    } catch (err) {\r\n        return { success: false, err: err }\r\n    }\r\n}\r\n\r\nexport const deleteapi = async (data, auth) => {\r\n\r\n    try {\r\n        const res = await axios.delete(`${API_baseURL}${API_ROUTE_NEW_BLOG}?id=${data}`, {\r\n            headers: {\r\n                Authorization: auth\r\n            }\r\n        })\r\n        if (res.status === 200) {\r\n            return { success: res.data, err: false }\r\n        } else {\r\n            return { success: false, err: res.data.message }\r\n        }\r\n    } catch (err) {\r\n        return { success: false, err: err }\r\n    }\r\n}\r\n\r\n","import { Container, makeStyles, Card, CardContent, Typography, CardActions, Button, Modal } from \"@material-ui/core\"\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport React from \"react\"\r\nimport { useAuthHeader } from \"react-auth-kit\"\r\nimport moment from 'moment'\r\nimport AppBarComponent from \"../AppBarComponent\"\r\nimport { getapi, deleteapi } from \"./api\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n}));\r\n\r\nconst BlogsComponent = () => {\r\n    const auth = useAuthHeader()\r\n    const classes = useStyles()\r\n    const [blogs, setBlogs] = React.useState(null)\r\n    const [openState, setOpenState] = React.useState({ open: false, index: 0 });\r\n\r\n    const handleOpen = (index) => () => {\r\n        console.log(index);\r\n        setOpenState({ open: true, index: index });\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpenState({ open: false, index: 0 });\r\n    };\r\n\r\n    const handleDelete = (id) => () => {\r\n        deleteapi(id, auth())\r\n            .then(({ success, err }) => {\r\n                if (err && !success) {\r\n                    if (err.response.data.message) {\r\n                        alert(err.response.data.message)\r\n                    } else {\r\n                        alert(err);\r\n                    }\r\n                } else {\r\n                    setBlogs(success)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                if (err.response) {\r\n                    alert(err.response.data.message)\r\n                } else {\r\n                    alert(err);\r\n                }\r\n            })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getapi(auth())\r\n            .then((success) => {\r\n                setBlogs(success.success);\r\n            })\r\n            .catch((err) => {\r\n                if (err.response) {\r\n                    alert(err.response.data.message)\r\n                } else {\r\n                    alert(err);\r\n                }\r\n            })\r\n    }, [])\r\n    console.log(blogs)\r\n    return (\r\n        <React.Fragment>\r\n            <AppBarComponent />\r\n            <Container component={\"main\"} className={classes.cardGrid} maxWidth=\"md\">\r\n                {blogs ? (\r\n                    <React.Fragment>\r\n                        {blogs.length > 0 ? (\r\n                            <React.Fragment>\r\n                                {blogs.map((blog, index) => (\r\n                                    <Card className={classes.card} key={index}>\r\n                                        <CardContent>\r\n                                            <Typography variant=\"h6\">\r\n                                                {blog.title}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body1\">\r\n                                                Published At: {moment(new Date(blog.createdAt)).format(\"D.MM.YYYY, h:mm a\").toString()}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        <CardActions>\r\n                                            <div style={{ flexGrow: 1 }}>\r\n                                                <Button size=\"small\" color=\"primary\" onClick={handleOpen(index)}>\r\n                                                    View\r\n                                        </Button>\r\n                                            </div>\r\n\r\n                                            <IconButton aria-label=\"delete\" onClick={handleDelete(blog._id)}>\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </CardActions>\r\n                                    </Card>\r\n                                ))}\r\n                                <Modal\r\n                                    open={openState.open}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <Card style={{ maxWidth: 800 }}>\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {blogs[openState.index].title}\r\n                                            </Typography>\r\n                                            <Typography variant=\"h6\">\r\n                                                {moment(new Date(blogs[openState.index].createdAt)).format(\"D.MM.YYYY, h:mm a\").toString()}\r\n                                            </Typography>\r\n                                            <hr />\r\n                                            <Typography variant=\"body2\">\r\n                                                {blogs[openState.index].body}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Modal>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <div>\r\n                                No Blog found. Try to write some.\r\n                            </div>\r\n                        )}\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <div>\r\n                        Loading Blogs...\r\n                    </div>\r\n                )}\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default BlogsComponent","import axios from \"axios\";\r\nimport {API_ROUTE_NEW_BLOG, API_baseURL} from \"../../vars\";\r\n\r\nconst api = async (data, auth) => {\r\n\r\n    try {\r\n        const res = await axios.post(API_baseURL + API_ROUTE_NEW_BLOG, data, {\r\n            headers: {\r\n                Authorization: auth \r\n            }\r\n        })\r\n        if(res.status === 200) {\r\n            return  {success: res.data, err: false}\r\n        } else {\r\n            return  {success: false, err: res.data.message}\r\n        }\r\n    } catch (err) {\r\n        return {success: false, err: err}\r\n    }\r\n}\r\n\r\nexport default api;","import { Container, makeStyles, Typography, TextField, Button } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport AppBarComponent from \"../AppBarComponent\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport api from \"./api\";\r\nimport { useAuthHeader, useAuthUser } from \"react-auth-kit\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'left',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}))\r\n\r\nconst NewBlogComponent = () => {\r\n    const classes = useStyles()\r\n    const auth = useAuthHeader()\r\n    const authUser = useAuthUser()\r\n    const { register, errors, handleSubmit } = useForm({\r\n        reValidateMode: \"onBlur\",\r\n        mode: \"onBlur\"\r\n    })\r\n\r\n    const onSubmitEvent = async (data) => {\r\n        const {success, err} =  await api({...data, userEmail: authUser().email}, auth())\r\n        if (err && !success) {\r\n            if (err.response){\r\n                alert(err.response.data.message)\r\n            }  else {\r\n                alert(err);\r\n            }\r\n        } else {\r\n            alert(success.message)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBarComponent />\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Add your new blog\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmitEvent)}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"title\"\r\n                            label=\"Blog Title\"\r\n                            name=\"title\"\r\n                            autoComplete=\"title\"\r\n                            inputRef={\r\n                                register({\r\n                                    required: \"Enter your blog title of minimum length of 10\",\r\n                                    minLength: 10\r\n                                })\r\n                            }\r\n                            error={!!errors.title}\r\n                            helperText={errors.title?.message}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            multiline\r\n                            rows={6}\r\n                            fullWidth\r\n                            id=\"body\"\r\n                            label=\"Blog Body\"\r\n                            name=\"body\"\r\n                            autoComplete=\"body\"\r\n                            inputRef={\r\n                                register({\r\n                                    required: \"Enter your blog body\",\r\n                                    minLength: 1\r\n                                })\r\n                            }\r\n                            error={!!errors.body}\r\n                            helperText={errors.body?.message}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Post\r\n                    </Button>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NewBlogComponent","import { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport { PrivateRoute } from 'react-auth-kit'\r\n\r\nimport { BLOGS, DASHBOARD, FORGOTPASSWORD, HOME, LOGIN, NEW_BLOG, REGISTER } from './routes'\r\n\r\nimport HomeComponent from '../HomeComponent'\r\nimport LoginComponent from '../LoginComponent'\r\nimport DashboardComponent from '../DashboardComponent'\r\nimport RegisterComponent from '../RegisterComponent'\r\nimport ForgotPasswordComponent from '../ForgotPasswordComponent'\r\nimport BlogsComponent from '../BlogsComponent'\r\nimport NewBlogComponent from '../NewBlogComponent'\r\n\r\nconst RouteComponent = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route path={HOME} component={HomeComponent} exact/>\r\n            <Route path={FORGOTPASSWORD} component={ForgotPasswordComponent} exact/>\r\n            <Route path={LOGIN} component={LoginComponent} exact/>\r\n            <Route path={REGISTER} component={RegisterComponent} exact/>\r\n            <PrivateRoute path={DASHBOARD} component={DashboardComponent} loginPath={LOGIN} exact/>\r\n            <PrivateRoute path={BLOGS} component={BlogsComponent} loginPath={LOGIN} exact/>\r\n            <PrivateRoute path={NEW_BLOG} component={NewBlogComponent} loginPath={LOGIN} exact/>\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default RouteComponent","import { CssBaseline } from '@material-ui/core';\nimport { AuthProvider } from 'react-auth-kit';\nimport RouteComponent from './Components/RouteComponent';\n\nconst App = () => {\n  return (\n    <AuthProvider\n      cookieDomain={window.location.hostname}\n      cookieSecure={window.location.protocol === \"https:\"} refreshTokenName={\"refresh\"}>\n      <CssBaseline />\n      <RouteComponent />\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}